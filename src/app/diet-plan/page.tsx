'use client';

import { useState } from 'react';
import { CalorieChart } from '../components/CalorieChart';

export default function DietPlanPage() {
  const [activeDay, setActiveDay] = useState('Pazartesi');

  const weeklyCalories = {
    'Pazartesi': 1850,
    'Salƒ±': 2100,
    '√áar≈üamba': 1950,
    'Per≈üembe': 2000,
    'Cuma': 1850,
    'Cumartesi': 1900,
    'Pazar': 1500
  };

  const weeklyPlan = {
    'Pazartesi': {
      totalCalories: 1850,
      meals: [
        { time: '08:00', type: 'Kahvaltƒ±', icon: 'üç≥', calories: 400, foods: ['2 yumurta', 'tam tahƒ±llƒ± ekmek', 'peynir', 'zeytin'], macros: { protein: '20g', carbs: '30g', fat: '15g' } },
        { time: '10:30', type: 'Ara √ñƒü√ºn', icon: 'ü•™', calories: 150, foods: ['1 adet meyve', '5 adet badem'], macros: { protein: '5g', carbs: '15g', fat: '8g' } },
        { time: '13:00', type: '√ñƒüle', icon: 'ü•ó', calories: 500, foods: ['Izgara tavuk', 'salata', 'bulgur pilavƒ±'], macros: { protein: '35g', carbs: '45g', fat: '20g' } },
        { time: '16:00', type: 'Ara √ñƒü√ºn', icon: 'ü•™', calories: 150, foods: ['Yoƒüurt', 'yulaf'], macros: { protein: '8g', carbs: '20g', fat: '5g' } },
        { time: '19:00', type: 'Ak≈üam', icon: 'üçΩÔ∏è', calories: 600, foods: ['Balƒ±k', 'sebze', '√ßorba'], macros: { protein: '40g', carbs: '50g', fat: '25g' } }
      ]
    },
    'Salƒ±': {
      totalCalories: 2100,
      meals: [
        { time: '08:00', type: 'Kahvaltƒ±', icon: 'üç≥', calories: 400, foods: ['Yulaf ezmesi', 's√ºt', 'muz', 'tar√ßƒ±n'], macros: { protein: '15g', carbs: '45g', fat: '12g' } },
        { time: '10:30', type: 'Ara √ñƒü√ºn', icon: 'ü•™', calories: 150, foods: ['Protein bar'], macros: { protein: '10g', carbs: '15g', fat: '7g' } },
        { time: '13:00', type: '√ñƒüle', icon: 'ü•ó', calories: 500, foods: ['Mercimek √ßorbasƒ±', 'kinoa salatasƒ±'], macros: { protein: '25g', carbs: '60g', fat: '18g' } },
        { time: '16:00', type: 'Ara √ñƒü√ºn', icon: 'ü•™', calories: 150, foods: ['Smoothie'], macros: { protein: '5g', carbs: '25g', fat: '3g' } },
        { time: '19:00', type: 'Ak≈üam', icon: 'üçΩÔ∏è', calories: 600, foods: ['K√∂fte', 'sebze', 'bulgur pilavƒ±'], macros: { protein: '35g', carbs: '55g', fat: '25g' } }
      ]
    }
  };

  const days = ['Pazartesi', 'Salƒ±', '√áar≈üamba', 'Per≈üembe', 'Cuma', 'Cumartesi', 'Pazar'];
  const dailyPlan = weeklyPlan[activeDay as keyof typeof weeklyPlan];

  const chartData = days.map(day => ({
    day,
    calories: weeklyCalories[day as keyof typeof weeklyCalories] || 0,
    target: 2000
  }));

  return (
    <div className="container py-8">
      {/* Ba≈ülƒ±k ve A√ßƒ±klama */}
      <div className="relative mb-12 overflow-hidden rounded-3xl border border-border/60 bg-gradient-to-r from-primary/10 via-accent/10 to-primary/10 p-8 shadow-lg">
        <div className="absolute -right-20 -top-20 h-40 w-40 rounded-full bg-primary/20 blur-3xl"></div>
        <div className="absolute -left-20 -bottom-20 h-40 w-40 rounded-full bg-accent/20 blur-3xl"></div>
        
        <div className="relative">
          <div className="mb-6 flex items-center gap-3">
            <div className="flex h-12 w-12 items-center justify-center rounded-xl bg-primary/20 text-2xl shadow-inner">
              ü•ó
            </div>
            <h1 className="text-3xl font-bold text-primary">
              <span className="rounded-lg bg-white/80 px-4 py-1 shadow-sm">Haftalƒ±k Diyet Planƒ±nƒ±z</span>
            </h1>
          </div>
          <p className="max-w-2xl rounded-lg bg-white/80 px-4 py-2 text-lg text-primary/80 shadow-sm">
            Size √∂zel hazƒ±rlanmƒ±≈ü, dengeli ve saƒülƒ±klƒ± beslenme programƒ±. 
            √ñƒü√ºnlerinizi takip edin, hedeflerinize ula≈üƒ±n.
          </p>
        </div>
      </div>

      {/* Kalori Grafiƒüi */}
      <CalorieChart 
        data={chartData}
        title="Kalori Takibi"
        subtitle="G√ºnl√ºk hedef: 2000 kcal"
      />

      {/* G√ºn Se√ßimi */}
      <div className="mb-8 overflow-hidden rounded-2xl border border-border bg-white/80 shadow-sm">
        <div className="flex items-center justify-between border-b border-border p-4">
          <h2 className="text-xl font-semibold text-primary">G√ºnl√ºk Plan</h2>
          <div className="flex items-center gap-3">
            <button className="rounded-full bg-primary/10 p-2 text-primary transition-colors hover:bg-primary/20">
              ‚óÄÔ∏è
            </button>
            <span className="rounded-lg bg-primary/5 px-3 py-1 font-medium text-primary">15-21 Nisan</span>
            <button className="rounded-full bg-primary/10 p-2 text-primary transition-colors hover:bg-primary/20">
              ‚ñ∂Ô∏è
            </button>
          </div>
        </div>
        <div className="flex gap-1 overflow-x-auto bg-muted/30 p-2">
          {days.map((day) => (
            <button
              key={day}
              onClick={() => setActiveDay(day)}
              className={`flex-shrink-0 rounded-xl px-6 py-3 text-sm font-medium transition-all ${
                activeDay === day
                  ? 'bg-primary text-white shadow-lg'
                  : 'bg-white text-primary hover:bg-primary/10'
              }`}
            >
              {day}
            </button>
          ))}
        </div>
      </div>

      {dailyPlan && (
        <div className="space-y-6">
          {/* G√ºnl√ºk √ñzet */}
          <div className="grid gap-6 rounded-2xl border border-border bg-white/80 p-6 shadow-sm lg:grid-cols-4">
            <div className="col-span-2 flex items-center gap-4">
              <div className="flex h-16 w-16 items-center justify-center rounded-full bg-primary/10 text-2xl">
                üìä
              </div>
              <div>
                <h3 className="text-lg font-semibold text-primary">G√ºnl√ºk Hedef</h3>
                <p className="text-sm text-muted-foreground">2000 kcal hedefinden {dailyPlan.totalCalories} kcal alƒ±ndƒ±</p>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <div className="flex h-12 w-12 items-center justify-center rounded-full bg-primary/10 text-xl">
                üíß
              </div>
              <div>
                <p className="font-medium text-primary">Su Hedefi</p>
                <p className="text-sm text-muted-foreground">1.5/2.5 L</p>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <div className="flex h-12 w-12 items-center justify-center rounded-full bg-primary/10 text-xl">
                üèÉ‚Äç‚ôÇÔ∏è
              </div>
              <div>
                <p className="font-medium text-primary">Egzersiz</p>
                <p className="text-sm text-muted-foreground">30 dk y√ºr√ºy√º≈ü</p>
              </div>
            </div>
          </div>

          {/* √ñƒü√ºnler */}
          <div className="space-y-4">
            {dailyPlan.meals.map((meal, index) => (
              <div
                key={index}
                className="group overflow-hidden rounded-2xl border border-border bg-white/80 shadow-sm transition-all hover:shadow-md"
              >
                <div className="flex items-center justify-between border-b border-border p-4">
                  <div className="flex items-center gap-3">
                    <div className="flex h-12 w-12 items-center justify-center rounded-xl bg-primary/10 text-2xl">
                      {meal.icon}
                    </div>
                    <div>
                      <h4 className="font-medium text-primary">{meal.type}</h4>
                      <p className="text-sm text-muted-foreground">{meal.time}</p>
                    </div>
                  </div>
                  <div className="flex items-center gap-4">
                    <span className="rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary">
                      {meal.calories} kcal
                    </span>
                    <button className="rounded-lg p-2 text-primary opacity-0 transition-opacity hover:bg-primary/10 group-hover:opacity-100">
                      ‚úèÔ∏è
                    </button>
                  </div>
                </div>
                <div className="grid gap-4 p-4 lg:grid-cols-2">
                  <div>
                    <h5 className="mb-2 text-sm font-medium text-primary">ƒ∞√ßerik</h5>
                    <ul className="space-y-1">
                      {meal.foods.map((food, foodIndex) => (
                        <li key={foodIndex} className="flex items-center gap-2 text-sm text-muted-foreground">
                          <span className="flex h-5 w-5 items-center justify-center rounded-full bg-primary/10 text-xs text-primary">‚Ä¢</span>
                          {food}
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div>
                    <h5 className="mb-2 text-sm font-medium text-primary">Makrolar</h5>
                    <div className="grid grid-cols-3 gap-2 rounded-lg border border-border p-2">
                      <div className="text-center">
                        <p className="text-xs text-muted-foreground">Protein</p>
                        <p className="font-medium text-primary">{meal.macros.protein}</p>
                      </div>
                      <div className="text-center">
                        <p className="text-xs text-muted-foreground">Karb</p>
                        <p className="font-medium text-primary">{meal.macros.carbs}</p>
                      </div>
                      <div className="text-center">
                        <p className="text-xs text-muted-foreground">Yaƒü</p>
                        <p className="font-medium text-primary">{meal.macros.fat}</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* √ñneriler */}
          <div className="rounded-2xl border border-border bg-white/80 p-6 shadow-sm">
            <div className="mb-4 flex items-center gap-3">
              <div className="flex h-10 w-10 items-center justify-center rounded-xl bg-primary/10 text-xl">
                üí°
              </div>
              <h3 className="text-lg font-semibold text-primary">G√ºn√ºn ƒ∞pu√ßlarƒ±</h3>
            </div>
            <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
              {[
                { icon: 'üíß', title: 'Su T√ºketimi', tip: 'G√ºnde en az 2-2.5 litre su i√ßmeyi unutmayƒ±n' },
                { icon: '‚è∞', title: '√ñƒü√ºn Zamanlamasƒ±', tip: '√ñƒü√ºnlerinizi d√ºzenli saatlerde yemeye √ßalƒ±≈üƒ±n' },
                { icon: 'üçé', title: 'Ara √ñƒü√ºnler', tip: 'Ara √∂ƒü√ºnleri atlamamaya √∂zen g√∂sterin' },
                { icon: 'üìè', title: 'Porsiyon Kontrol√º', tip: 'Porsiyon kontrol√ºne dikkat edin' },
                { icon: 'üèÉ‚Äç‚ôÄÔ∏è', title: 'Egzersiz', tip: 'Haftada en az 3 g√ºn 30 dakika egzersiz yapƒ±n' },
                { icon: 'üçΩÔ∏è', title: 'Yemek D√ºzeni', tip: 'Yemeklerinizi yava≈ü yiyin ve iyice √ßiƒüneyin' }
              ].map((√∂neri, index) => (
                <div
                  key={index}
                  className="group relative overflow-hidden rounded-xl border border-border bg-white/90 p-4 shadow-sm transition-all hover:shadow-md"
                >
                  <div className="flex items-center gap-3">
                    <div className="flex h-10 w-10 items-center justify-center rounded-xl bg-primary/10 text-xl shadow-inner">
                      {√∂neri.icon}
                    </div>
                    <div>
                      <h4 className="font-medium text-primary">{√∂neri.title}</h4>
                      <p className="text-sm text-muted-foreground">{√∂neri.tip}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* G√ºnl√ºk Toplam √ñzet */}
          <div className="rounded-2xl border border-border bg-gradient-to-r from-primary/5 via-white to-primary/5 p-6 shadow-sm">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="flex h-12 w-12 items-center justify-center rounded-xl bg-primary/10 text-2xl">
                  üìà
                </div>
                <div>
                  <h3 className="font-semibold text-primary">G√ºnl√ºk Toplam</h3>
                  <p className="text-sm text-muted-foreground">Hedef: 2000 kcal</p>
                </div>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold text-primary">{dailyPlan.totalCalories} kcal</div>
                <div className="text-sm text-muted-foreground">
                  {dailyPlan.totalCalories < 2000 ? `${2000 - dailyPlan.totalCalories} kcal kaldƒ±` : 'Hedefe ula≈üƒ±ldƒ±'}
                </div>
              </div>
            </div>
            <div className="mt-4">
              <div className="mb-2 flex justify-between text-sm">
                <span className="text-muted-foreground">ƒ∞lerleme</span>
                <span className="font-medium text-primary">{Math.round((dailyPlan.totalCalories / 2000) * 100)}%</span>
              </div>
              <div className="h-2 overflow-hidden rounded-full bg-muted">
                <div 
                  className="h-full rounded-full bg-gradient-to-r from-primary to-accent transition-all" 
                  style={{ width: `${Math.min((dailyPlan.totalCalories / 2000) * 100, 100)}%` }}
                />
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 